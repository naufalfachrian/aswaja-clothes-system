/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aswajaclothes.transaction;

import aswajaclothes.connection.ConnectionManager;
import aswajaclothes.grid.BarangGridFrame;
import aswajaclothes.grid.CustomerGridFrame;
import aswajaclothes.grid.EkspedisiGridFrame;
import aswajaclothes.grid.GridListener;
import aswajaclothes.model.master.BarangModel;
import aswajaclothes.model.master.CustomerModel;
import aswajaclothes.model.master.EkspedisiModel;
import aswajaclothes.model.master.PesananModel;
import aswajaclothes.model.transaction.InputOrderPenjualanDetailModel;
import aswajaclothes.model.transaction.InputOrderPenjualanModel;
import aswajaclothes.util.Config;
import aswajaclothes.util.CurrencyUtil;
import aswajaclothes.util.FilterUtil;
import aswajaclothes.util.ValidatorUtil;
import aswajaclothes.widget.ButtonCell;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.net.URL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Satrio
 */
public class InputBuktiPembayaranFrame extends javax.swing.JFrame implements GridListener, MouseListener {

    /**
     * Creates new form InputOrderPenjualanFrame
     */
    public InputBuktiPembayaranFrame() {
        initComponents();
        initDateFormat();
        initKodePesanan();
        initFormatFieldNumber();
        initTable();
        initListOrderPenjualan();
    }
    
    private void initDateFormat(){
        // Todo
    }
    
    private void initKodePesanan(){
        // Todo
    }
    
    private void initFormatFieldNumber(){
        // Todo
    }
    
    private void initTable(){
        tblModel = (DefaultTableModel)tblPesananDetail.getModel();
        tblPesananDetail.addMouseListener(this);
        initCellRenderAction();
        populateTable();
    }
    
    private void initCellRenderAction(){
        // Todo
    }
    
    private void initListOrderPenjualan(){
        // Todo
    }
    
    private void clearBarang(){
        // Todo
    }
    
    private void clearPesanan(){
        // Todo
    }
    
    private void clearEkspedisi(){
        // Todo
    }
    
    private void clearAll(){
        // Todo
    }
    
    private void tambah() throws ParseException, Exception{
        // Todo
    }

    private boolean isDuplikasiBarang(InputOrderPenjualanDetailModel model, boolean isUpdate){
        return false;
    }
     
    private void calculateTotal() throws ParseException{
        // Todo
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPesananDetail = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        tfNoPesanan = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPesananDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Kode Pesanan", "Qty", "Total Harga", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPesananDetail.setRowHeight(20);
        jScrollPane1.setViewportView(tblPesananDetail);

        jLabel10.setText("No. Pesanan");

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfNoPesanan, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCari)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnKeluar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNoPesanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(btnCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnKeluar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    // Variable declarations - able to modify
    DefaultTableModel tblModel;
    List<PesananModel> daftarPesanan;
    
    private static final String VerificationText = "Verifikasi";
    
    private static final String SudahLunasText = "Sudah Lunas";
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPesananDetail;
    private javax.swing.JTextField tfNoPesanan;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onSelectedRow(Object model, String fromGrid) {
        // Todo
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        int rowSelected = tblPesananDetail.getSelectedRow();
        int columnSelected = tblPesananDetail.getSelectedColumn();
        String columnText = tblPesananDetail.getModel().getValueAt(rowSelected, columnSelected).toString();
        if (columnSelected == 5 && columnText.equals(VerificationText)) {
            askToConfirmBuktiPembayaran(rowSelected);
        }
        if (columnSelected == 5 & columnText.equals(SudahLunasText)) {
            pesananSudahLunas(rowSelected);
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        // Todo
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        // Todo
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        // Todo
    }

    @Override
    public void mouseExited(MouseEvent e) {
        // Todo
    }

    private void askToConfirmBuktiPembayaran(int rowSelected) {
        PesananModel pesanan = daftarPesanan.get(rowSelected);
        int dialogResult = JOptionPane.showConfirmDialog (null, String.format("Konfirmasi pembayaran pesanan %s atas nama %s?", pesanan.getKodePesanan(), pesanan.getNamaKustomer()), "Warning", JOptionPane.YES_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION){
            confirmBuktiPembayaran(pesanan);
        }
    }

    private void confirmBuktiPembayaran(PesananModel pesanan) {
        new ConnectionManager().setStatusBayarOrderPenjualan(pesanan, true);
        populateTable();
    }

    private void populateTable() {
        daftarPesanan = new ConnectionManager().getDaftarPesanan();
        ArrayList<String[]> rows = new ArrayList<>();
        int count = 1;
        for (PesananModel item : daftarPesanan) {
            String[] rowData = new String[]{
                String.format("%d", count),
                item.getKodePesanan(),
                item.getNamaKustomer(),
                "0",
                new CurrencyUtil().formatCurrency(item.getTotal()),
                item.isLunas() ? SudahLunasText : VerificationText
            };
            rows.add(rowData);
            count++;
        }
        TableModel tblModel = new DefaultTableModel(rows.toArray(new String[][]{}), new String[]{ "No.", "Kode Pesanan", "Nama Kustomer", "Qty", "Total Harga", "Aksi" }){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblPesananDetail.setModel(tblModel);
        tblPesananDetail.getColumnModel().getColumn(5).setCellRenderer(new ButtonCell());
    }

    private void pesananSudahLunas(int rowSelected) {
        PesananModel pesanan = daftarPesanan.get(rowSelected);
        JOptionPane.showMessageDialog(null, String.format("Pembayaran pesanan %s atas nama %s sudah lunas.", pesanan.getKodePesanan(), pesanan.getNamaKustomer()), "Warning", JOptionPane.INFORMATION_MESSAGE);
    }
    
}
